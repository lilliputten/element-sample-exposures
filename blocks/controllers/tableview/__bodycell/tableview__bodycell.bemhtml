/* jshint camelcase: false */
/* jshint unused: false */
/* globals debugger, DBG, applyCtx, content, applyNext, block, elem, attrs, def */

/**
 *
 *  @overview tableview__bodycell
 *
 *  @author lilliputten <lilliputten@yandex.ru>
 *  @since 2016.10.31 13:31
 *  @version 2016.10.31 13:31
 *
*/

/*
 *  @module tableview__bodycell
 */

block('tableview').elem('bodycell')(

    def()(function(){
        var ctx = this.ctx;

        // if ( !ctx.cls ) { ctx.cls = ''; }
        if ( !ctx.mix ) { ctx.mix = []; }
        // if ( !ctx.mods ) { ctx.mods = {}; }
        // if ( !ctx.attrs ) { ctx.attrs = {}; }

        ctx.bare_cls = 'n_'+ctx.n;

        ctx.cls = ctx.cls ? ctx.cls+' ': '';
        ctx.cls += 'cell '+ctx.bare_cls;

        if ( ctx.show && ! /\bshow\b/.test(ctx.cls) ) {
            ctx.cls += ' show';
        }

        if ( ctx.datasets ) {
            ctx.cls += ' dataset dataset_'+ctx.datasets.replace(/,/g, ' dataset_');
        }

        ctx.attrs = this.extend(ctx.attrs, {
            title : ctx.val,
        });
        if ( ctx.width ) {
            ctx.attrs = this.extend(ctx.attrs, {
                style : 'width:'+ctx.width+'px;min-width:'+ctx.width+'px;max-width:'+ctx.width+'px;',
            });
        }

        // return applyCtx(ctx);
        return applyNext();
    }),

    content()(function(){
        var ctx = this.ctx;
        ctx.content = ctx.val;
        var result = applyNext();
        return result;
    }),

    tag()('td')

);

